#!/bin/bash
# Simple postBuild script that doesn't fail and completes quickly

echo "Setting up EOPF-Zarr environment..."

# Create directories
mkdir -p /opt/eopf-zarr/drivers
mkdir -p /opt/eopf-zarr/build

# Set environment variables in profile
echo 'export GDAL_DRIVER_PATH="/opt/eopf-zarr/drivers"' >> ~/.bashrc
echo 'export GDAL_DATA="/usr/share/gdal"' >> ~/.bashrc

# Try to build driver, but don't fail if it doesn't work
echo "Attempting to build EOPF-Zarr driver..."
cd /opt/eopf-zarr

# Clone repository (with timeout and error handling)
if timeout 60 git clone https://github.com/EOPF-Sample-Service/GDAL-ZARR-EOPF.git source 2>/dev/null; then
    echo "Source cloned successfully"
    
    cd build
    if timeout 120 cmake ../source 2>/dev/null && timeout 180 make -j2 2>/dev/null; then
        echo "Build successful"
        if [ -f "gdal_EOPFZarr.so" ]; then
            cp gdal_EOPFZarr.so ../drivers/
            echo "Driver installed successfully"
        fi
    else
        echo "Build failed or timed out - will work without custom driver"
    fi
else
    echo "Failed to clone source - will work without custom driver"
fi

# Create a simple test notebook regardless of build status
mkdir -p ~/examples
cat > ~/examples/test_environment.ipynb << 'EOF'
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Test basic environment\n",
    "import os\n",
    "os.environ['GDAL_DRIVER_PATH'] = '/opt/eopf-zarr/drivers'\n",
    "\n",
    "try:\n",
    "    from osgeo import gdal\n",
    "    gdal.AllRegister()\n",
    "    print(f'GDAL {gdal.VersionInfo()} loaded with {gdal.GetDriverCount()} drivers')\n",
    "    \n",
    "    # Check for our driver\n",
    "    if os.path.exists('/opt/eopf-zarr/drivers/gdal_EOPFZarr.so'):\n",
    "        print('EOPF-Zarr driver file found')\n",
    "        driver = gdal.GetDriverByName('EOPFZARR')\n",
    "        if driver:\n",
    "            print(f'EOPF-Zarr driver loaded: {driver.GetDescription()}')\n",
    "        else:\n",
    "            print('EOPF-Zarr driver file exists but not loaded')\n",
    "    else:\n",
    "        print('EOPF-Zarr driver not built - using standard GDAL')\n",
    "        \n",
    "except Exception as e:\n",
    "    print(f'Error: {e}')"
   ]
  }
 ],
 \"metadata\": {\"kernelspec\": {\"display_name\": \"Python 3\", \"language\": \"python\", \"name\": \"python3\"}},\n \"nbformat\": 4,\n \"nbformat_minor\": 4\n}\nEOF\n\necho \"Setup complete - environment ready!\"\necho \"Note: EOPF-Zarr driver build may have failed, but basic environment is functional\"\necho \"Check ~/examples/test_environment.ipynb to validate setup\"
